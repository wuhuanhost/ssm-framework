spring:
  ############################################################
  #
  # 配置数据源信息
  #
  ############################################################
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # type: com.zaxxer.hikari.HikariDataSource #数据远类型为HicariCP
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.1.123:3306/test1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&autoReconnect=true
    username: root
    password: root
    continue-on-error: true
    sql-script-encoding: UTF-8
    ## hikari数据连接池配置 start==========================================================================================
    # hikari:
    #   connection-timeout: 30000 # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
    #   minimum-idle: 5 # 最小连接数
    #   maximum-pool-size: 20 # 最大连接数
    #   auto-commit: true # 自动提交
    #   idle-timeout: 600000 # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
    #   pool-name: DateSourceHikariCP # 连接池名字
    #   max-lifetime: 1800000 # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
    #   connection-test-query: SELECT 1
    ##hikari 数据源 end==============================================================================================

    ## druid数据连接池配置 start==========================================================================================
    druid:
      # 配置初始化大小、最小、最大
      initial-size: 5
      minIdle: 10
      max-active: 20
      # 配置获取连接等待超时的时间(单位：毫秒)
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 2000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 600000
      # max-evictable-idle-time-millis: 900000
      # 用来测试连接是否可用的SQL语句,默认值每种数据库都不相同,这是mysql
      validationQuery: select 1
      # 应用向连接池申请连接，并且testOnBorrow为false时，连接池将会判断连接是否处于空闲状态，如果是，则验证这条连接是否可用
      testWhileIdle: true
      # 如果为true，默认是false，应用向连接池申请连接时，连接池会判断这条连接是否是可用的
      testOnBorrow: false
      # 如果为true（默认false），当应用使用完连接，连接池回收连接的时候会判断该连接是否还可用
      testOnReturn: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle
      poolPreparedStatements: true
      # 要启用PSCache，必须配置大于0，当大于0时， poolPreparedStatements自动触发修改为true，
      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
      # 可以把这个数值配置大一些，比如说100
      maxOpenPreparedStatements: 20
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
      keepAlive: true
      # Spring 监控，利用aop 对指定接口的执行时间，jdbc数进行记录
      aop-patterns: "com.geekfanfan.think.mapper.*"
      ########### 启用内置过滤器（第一个 stat必须，否则监控不到SQL）##########
      filters: stat,wall,log4j2
      # 自己配置监控统计拦截的filter
      filter:
        # 开启druiddatasource的状态监控
        stat:
          enabled: true
          db-type: mysql
          # 开启慢sql监控，超过2s 就认为是慢sql，记录到日志中
          log-slow-sql: true
          slow-sql-millis: 2000
        # 日志监控，使用slf4j 进行日志输出
        slf4j:
          enabled: true
          statement-log-error-enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
      ########## 配置WebStatFilter，用于采集web关联监控的数据 ##########
      web-stat-filter:
        enabled: true # 启动 StatFilter
        url-pattern: /* # 过滤所有url
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除一些不必要的url
        session-stat-enable: true # 开启session统计功能
        session-stat-max-count: 100 # session的最大个数,默认100
      ########## 配置StatViewServlet（监控页面），用于展示Druid的统计信息 ##########
      stat-view-servlet:
        enabled: true # 启用StatViewServlet
        url-pattern: /druid/* # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
        reset-enable: false # 不允许清空统计数据,重新计算
        login-username: root # 配置监控页面访问密码
        login-password: root
        allow: 127.0.0.1 # 允许访问的地址，如果allow没有配置或者为空，则允许所有访问
        deny:
    ## Druid 配置end==============================================================================================

  # thymeleaf模板设置
  thymeleaf:
    cache: false
    enabled: true
    encoding: UTF-8
    prefix: classpath:/templates/
    suffix: .html

############################################################
#
# mybatis
#
############################################################
# mybatis: #mapper配置文件
#   # config-locations: classpath:mybatis/config.xml
#   # mapper-locations: classpath:mybatis/mapper/*Mapper.xml
#   # type-aliases-package: com.geekfanfan.think.entity
#   # configuration:
#   #   map-underscore-to-camel-case: true
#   #   cache-enabled: false
#   #   # 打印sql, 方便调试
#   #   log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#   #   use-generated-keys: true
#   #   default-statement-timeout: 60
#   #   default-fetch-size: 100

mybatis-plus: #mybatis-plus 配置文件
  config-locations: classpath:mybatis/config.xml
  mapper-locations: classpath:mybatis/mapper/*Mapper.xml
  type-aliases-package: com.geekfanfan.think.entity
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 打印sql, 方便调试
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    use-generated-keys: true
    default-statement-timeout: 60
    default-fetch-size: 100

  logging: #mybaties日志配置
    level:
      # 打印sql语句
      com.geekfanfan.think.mapper: debug
      # io.swagger.models.parameters.AbstractSerializableParameter: error #解决swagger异常AbstractSerializableParameter

############################################################
#
# 开发模式内置tomcat配置
#
#############################################################
server:
  #端口号
  port: 8888
  #项目名，如果不设定，默认是 /
  context-path: /

############################################################
#
# Swagger界面内容配置
#
############################################################
swagger:
  title: Bootan API接口文档
  description: Bootan Api Documentation
  version: 1.0.0
  termsOfServiceUrl: https://www.geekfanfan.com
  contact:
    name: 极客凡凡
    url: https://www.geekfanfan.com
    email: wuhuanhost@163.com

# Swagger ui knife4j界面内容配置
knife4j:
  enable: true
  documents:
    - group: 1.2.x
      name: 测试自定义标题分组
      locations: classpath:md/*
  setting:
    enableSwaggerModels: true
    enableDocumentManage: true
    enableHost: false
    enableHostText: http://localhost:8888
    enableRequestCache: true
    enableFilterMultipartApis: false
    enableFilterMultipartApiMethodType: POST
    language: zh-CN
  cors: false
  production: false
  basic:
    enable: false
    username: test
    password: 123

############################################################
#
# Redis 配置
#
############################################################
redis:
  ## 连接超时时间（毫秒）
  timeout: 1200
  ## Redis数据库索引（默认为0）
  database: 0
  ## Redis服务器地址
  host: 127.0.0.1
  ## Redis服务器连接端口
  port: 6379
  ## Redis服务器连接密码（默认为空）
  password:
  #连接池最大链接数默认值为8
  lettuce: # springboot2.x 默认的redis连接方案
    pool:
      max-active: 8
      #连接池最大阻塞时间（使用负值表示没有限制）默认为-1
      max-wait: -1
      #连接池中的最大空闲连接数 默认为8
      max-idle: 8
      #连接池中的最小空闲连接数 默认为8
      min-idle: 0
  jedis: # springboot1.x 默认的redis连接方案
    pool:
      ## 连接池最大连接数（使用负值表示没有限制）
      #spring.redis.pool.max-active=8
      max-active: 8
      ## 连接池最大阻塞等待时间（使用负值表示没有限制）
      #spring.redis.pool.max-wait=-1
      max-wait: -1
      ## 连接池中的最大空闲连接
      #spring.redis.pool.max-idle=8
      max-idle: 8
      ## 连接池中的最小空闲连接
      #spring.redis.pool.min-idle=0
      min-idle: 0
